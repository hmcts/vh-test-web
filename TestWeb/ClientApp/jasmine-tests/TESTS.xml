<?xml version="1.0"?>
<testsuite name="Chrome 88.0.4298.0 (Windows 10)" package="" timestamp="2021-01-15T14:42:54" id="0" hostname="NICKPOXONA8E9" tests="157" errors="0" failures="0" time="1.156">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4298.0 Safari/537.36"/>
  </properties>
  <testcase name="AllocateUsersComponent should create" time="0.154" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should populate data with previous allocations" time="0.024" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should throw an error if call to test api to get all allocations fails" time="0.238" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should allocate a user" time="0.019" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should throw an error if call to test api to allocate a user fails" time="0.015" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should reset a users password" time="0.015" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should throw an error if call to test api to reset a users password fails" time="0.014" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should unallocate a user" time="0.014" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should throw an error if call to test api to reset a users password fails" time="0.014" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should unallocate all users" time="0.014" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should throw an error if call to test api to unallocate all users fails" time="0.014" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should display allocations if they exist" time="0.017" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should return true for zero hours and minutes" time="0.013" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should return true for invalid days" time="0.013" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should return true for invalid hour" time="0.013" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should return true for invalid minute" time="0.015" classname="AllocateUsersComponent"/>
  <testcase name="AllocateUsersComponent should close the dialog" time="0.015" classname="AllocateUsersComponent"/>
  <testcase name="EventsComponent should create" time="0.036" classname="EventsComponent"/>
  <testcase name="EventsComponent should create a hearing event" time="0.008" classname="EventsComponent"/>
  <testcase name="EventsComponent should throw an error if call to test api to send hearing event fails" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should create a partcipant event" time="0.006" classname="EventsComponent"/>
  <testcase name="EventsComponent should throw an error if call to test api to participant send event fails" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should get all case names" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should throw an error if call to test api to get conferences fails" time="0.004" classname="EventsComponent"/>
  <testcase name="EventsComponent should select a case" time="0.007" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if case name is selected" time="0.004" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if a hearing event has been selected" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if a participant event has been selected" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if a participant transfer has been selected" time="0.004" classname="EventsComponent"/>
  <testcase name="EventsComponent should close the dialog" time="0.01" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if transfer from has a value" time="0.005" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if transfer to has a value" time="0.006" classname="EventsComponent"/>
  <testcase name="EventsComponent should determine if transfer field have values and are selected" time="0.008" classname="EventsComponent"/>
  <testcase name="CreateHearingComponent should create" time="0.062" classname="CreateHearingComponent"/>
  <testcase name="CreateHearingComponent should populate data and call create hearing" time="0.024" classname="CreateHearingComponent"/>
  <testcase name="CreateHearingComponent should create a hearing" time="0.021" classname="CreateHearingComponent"/>
  <testcase name="CreateHearingComponent should navigate to summary page" time="0.024" classname="CreateHearingComponent"/>
  <testcase name="CreateHearingComponent should navigate to create hearing page" time="0.018" classname="CreateHearingComponent"/>
  <testcase name="CreateHearingComponent should unsubscribe all subcriptions on destroy" time="0.021" classname="CreateHearingComponent"/>
  <testcase name="DeleteHearingComponent should create" time="0.013" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should fail validation if case name is empty" time="0.007" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should pass validation if case name has test in name" time="0.007" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should fail validation if case name does not have test" time="0.006" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should sanitize text for case name" time="0.007" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should delete a hearing" time="0.007" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should not delete a hearing if case name is not found" time="0.006" classname="DeleteHearingComponent"/>
  <testcase name="DeleteHearingComponent should throw an error if test api to delete hearing fails" time="0.008" classname="DeleteHearingComponent"/>
  <testcase name="SummaryComponent should create" time="0.015" classname="SummaryComponent"/>
  <testcase name="SummaryComponent should navigate to create hearing page" time="0.003" classname="SummaryComponent"/>
  <testcase name="SummaryComponent should reset tooltip value" time="0.002" classname="SummaryComponent"/>
  <testcase name="SummaryComponent should return true for the last participant" time="0.002" classname="SummaryComponent"/>
  <testcase name="SummaryComponent should copy the conference id to the clipboard" time="0.003" classname="SummaryComponent"/>
  <testcase name="LoginComponent should create" time="0" classname="LoginComponent"/>
  <testcase name="LoginComponent should store return url if supplied" time="0.002" classname="LoginComponent"/>
  <testcase name="LoginComponent should use saved return url" time="0.001" classname="LoginComponent"/>
  <testcase name="LoginComponent should return to root url if no return path is given" time="0.002" classname="LoginComponent"/>
  <testcase name="LoginComponent should fallback to root url if return url is invalid" time="0" classname="LoginComponent"/>
  <testcase name="LogoutComponent should call logout if authenticated" time="0" classname="LogoutComponent"/>
  <testcase name="LogoutComponent should not call logout if unauthenticated" time="0" classname="LogoutComponent"/>
  <testcase name="LogoutComponent should return true for &quot;loggedIn&quot; when authenticated" time="0" classname="LogoutComponent"/>
  <testcase name="LogoutComponent should return false for &quot;loggedIn&quot; when not authenticated" time="0" classname="LogoutComponent"/>
  <testcase name="WindowRef should get url from browser" time="0.001" classname="WindowRef"/>
  <testcase name="WindowLocation should concatenate to url" time="0" classname="WindowLocation"/>
  <testcase name="WindowLocation should concatenate to url without search and hash" time="0.001" classname="WindowLocation"/>
  <testcase name="ConfigService should not have called method on api client" time="0.005" classname="ConfigService"/>
  <testcase name="AllocateUserMapper should map the AllocateUserModel to the AllocateUserRequest" time="0" classname="AllocateUserMapper"/>
  <testcase name="AllocateUserMapper should map the AllocateUsersModel to the AllocateUsersRequest" time="0.001" classname="AllocateUserMapper"/>
  <testcase name="MapAllocatedResponseToUsers should map the UserDetailsResponse to the UserModel" time="0.002" classname="MapAllocatedResponseToUsers"/>
  <testcase name="MapAllocatedResponseToAllocatedModel should map the AllocationResponse to the AllocatedModel" time="0" classname="MapAllocatedResponseToAllocatedModel"/>
  <testcase name="MapAllocatedResponseToUser should map the UserDetailsResponse to the UserModel" time="0.001" classname="MapAllocatedResponseToUser"/>
  <testcase name="MapConfirmHearing should map the ConfirmHearingModel to the UpdateBookingStatusRequest" time="0.001" classname="MapConfirmHearing"/>
  <testcase name="DeleteUserMapper should map the DeleteModel to the DeleteTestHearingDataRequest" time="0.001" classname="DeleteUserMapper"/>
  <testcase name="MapConfirmHearing should map the EventModel to the ConferenceEventRequest" time="0.001" classname="MapConfirmHearing"/>
  <testcase name="MapHearing should map the HearingModel to the CreateHearingRequest" time="0" classname="MapHearing"/>
  <testcase name="ProfileService should not call api when profile is already set" time="0.001" classname="ProfileService"/>
  <testcase name="ProfileService should call api when profile is not set" time="0.001" classname="ProfileService"/>
  <testcase name="ProfileService should clear set profile" time="0" classname="ProfileService"/>
  <testcase name="ProfileService should return instance when profile is already in cache" time="0" classname="ProfileService"/>
  <testcase name="ProfileService should return instance when profile is already in cache" time="0.001" classname="ProfileService"/>
  <testcase name="ErrorService should do nothing if skip redirect is true" time="0.006" classname="ErrorService"/>
  <testcase name="ErrorService should do nothing if error is not an api exception" time="0" classname="ErrorService"/>
  <testcase name="ErrorService should navigate to unauthorised" time="0.003" classname="ErrorService"/>
  <testcase name="ErrorService should navigate to not found" time="0.003" classname="ErrorService"/>
  <testcase name="ErrorService should navigate to service error" time="0.002" classname="ErrorService"/>
  <testcase name="ErrorService should return false when error not an ApiException during unauthorised check" time="0" classname="ErrorService"/>
  <testcase name="ErrorService should return false when error not a 401 ApiException during unauthorised check" time="0.003" classname="ErrorService"/>
  <testcase name="ErrorService should return true and navigate to home when error is a 401 ApiException during unauthorised check" time="0.001" classname="ErrorService"/>
  <testcase name="LoggerService should be created" time="0.002" classname="LoggerService"/>
  <testcase name="LoggerService should log events to all adapters" time="0.002" classname="LoggerService"/>
  <testcase name="LoggerService should log errors to all adapters" time="0.001" classname="LoggerService"/>
  <testcase name="LoggerService should log warnings to adapters" time="0.001" classname="LoggerService"/>
  <testcase name="LoggerService should log info logs to adapters" time="0.002" classname="LoggerService"/>
  <testcase name="LoggerService should log debug logs to adapters" time="0.002" classname="LoggerService"/>
  <testcase name="PageTrackerService should be created" time="0.003" classname="PageTrackerService"/>
  <testcase name="PageTrackerService it should retrieve data from session" time="0.001" classname="PageTrackerService"/>
  <testcase name="PageTrackerService it should save data from session" time="0.003" classname="PageTrackerService"/>
  <testcase name="ReturnUrlService should return null if no key is stored" time="0.001" classname="ReturnUrlService"/>
  <testcase name="ReturnUrlService should delete the stored url after popping" time="0.001" classname="ReturnUrlService"/>
  <testcase name="ReturnUrlService should use the last stored url" time="0" classname="ReturnUrlService"/>
  <testcase name="SessionStorage can set and read data from storage" time="0.001" classname="SessionStorage"/>
  <testcase name="SessionStorage should not set null or undefined data" time="0" classname="SessionStorage"/>
  <testcase name="SessionStorage removes invalid keys after failing to read" time="0.001" classname="SessionStorage"/>
  <testcase name="SessionStorage returns null if no data is cached" time="0" classname="SessionStorage"/>
  <testcase name="SessionStorage can clear any stored value" time="0.001" classname="SessionStorage"/>
  <testcase name="AllocationService should call the test api to allocate users for the hearing" time="0.002" classname="AllocationService"/>
  <testcase name="AllocationService should throw an error if test api to allocate users fails" time="0.001" classname="AllocationService"/>
  <testcase name="AllocationService should call the test api to allocate a single user for the hearing" time="0.001" classname="AllocationService"/>
  <testcase name="AllocationService should throw an error if allocate a single user fails" time="0.002" classname="AllocationService"/>
  <testcase name="AllocationService should throw an error if profile service fails to retreive the logged in user" time="0.001" classname="AllocationService"/>
  <testcase name="AllocationService should call the test api to get all allocated users by logged in user" time="0.001" classname="AllocationService"/>
  <testcase name="AllocationService should throw an error if get all allocated users by logged in user fails" time="0.001" classname="AllocationService"/>
  <testcase name="AllocationService should call the test api to unallocate users" time="0" classname="AllocationService"/>
  <testcase name="AllocationService should throw an error if get unallocated users fails" time="0.002" classname="AllocationService"/>
  <testcase name="AllocationService should call the test api to unallocate all allocated users" time="0" classname="AllocationService"/>
  <testcase name="ConferenceService should call the test api to get conferences for today" time="0.001" classname="ConferenceService"/>
  <testcase name="ConferenceService should throw an error if test api to get conferences for today fails" time="0" classname="ConferenceService"/>
  <testcase name="ConferenceService should call the test api to get conference by hearing ref id" time="0.002" classname="ConferenceService"/>
  <testcase name="ConferenceService should throw an error if test api to get conference by hearing ref id fails" time="0" classname="ConferenceService"/>
  <testcase name="ConfirmService should call the test api to confirm a hearing" time="0.003" classname="ConfirmService"/>
  <testcase name="ConfirmService should throw an error if call to test api to confirm a hearing fails" time="0.001" classname="ConfirmService"/>
  <testcase name="EventService should call the test api to create a hearing event" time="0.001" classname="EventService"/>
  <testcase name="EventService should call the test api to create a partcipant event" time="0.002" classname="EventService"/>
  <testcase name="EventService should throw an error if call to test api to send an event fails" time="0.001" classname="EventService"/>
  <testcase name="HearingService should call the test api to create a hearing" time="0.002" classname="HearingService"/>
  <testcase name="HearingService should throw an error if test api to create hearing fails" time="0.002" classname="HearingService"/>
  <testcase name="Summary should get all summary details" time="0.001" classname="Summary"/>
  <testcase name="Summary should convert summary to text" time="0" classname="Summary"/>
  <testcase name="ResetService should reset the passwords for an allocated user" time="0" classname="ResetService"/>
  <testcase name="ResetService should reset all the passwords for all users in the hearing" time="0.004" classname="ResetService"/>
  <testcase name="ResetService should throw an error if call to test api to reset password fails" time="0.002" classname="ResetService"/>
  <testcase name="SummeriesService should get the summary data" time="0" classname="SummeriesService"/>
  <testcase name="TestApiService should create" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the allocate users test api endpoint" time="0.002" classname="TestApiService"/>
  <testcase name="TestApiService should call the confirm hearing test api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the password test api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the remove test data api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the allocate single user test api endpoint" time="0.001" classname="TestApiService"/>
  <testcase name="TestApiService should call the unallocate user test api endpoint" time="0.001" classname="TestApiService"/>
  <testcase name="TestApiService should call the get all allocations by allocatedBy test api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the create hearing test api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the get all conferences for today test api endpoint" time="0" classname="TestApiService"/>
  <testcase name="TestApiService should call the get all conferences by hearing ref id test api endpoint" time="0.002" classname="TestApiService"/>
  <testcase name="TestApiService should call the send event test api endpoint" time="0.001" classname="TestApiService"/>
  <testcase name="BackNavigationComponent should go back using location" time="0.001" classname="BackNavigationComponent"/>
  <testcase name="ErrorComponent should create" time="0.006" classname="ErrorComponent"/>
  <testcase name="ErrorComponent should show default error message if session storage is empty" time="0.005" classname="ErrorComponent"/>
  <testcase name="ErrorComponent should show error message if session storage returns a value" time="0.006" classname="ErrorComponent"/>
  <testcase name="ErrorComponent should unsubscribe all subcriptions on destroy component" time="0.005" classname="ErrorComponent"/>
  <testcase name="ErrorComponent should navigate to previous page on reconnect click" time="0.009" classname="ErrorComponent"/>
  <testcase name="ErrorComponent Refresh should not navigate back on timer page refresh" time="0.006" classname="ErrorComponent Refresh"/>
  <testcase name="FooterComponent should create" time="0.01" classname="FooterComponent"/>
  <testcase name="HeaderComponent header component should have top menu items with authenticated user" time="0.003" classname="HeaderComponent"/>
  <testcase name="HeaderComponent header component should not have top menu items with unauthenticated user" time="0.001" classname="HeaderComponent"/>
  <testcase name="HeaderComponent selected top menu item has active property set to true, others item active set to false" time="0.001" classname="HeaderComponent"/>
  <testcase name="HeaderComponent user should navigate by selecting top menu item" time="0" classname="HeaderComponent"/>
  <testcase name="HeaderComponent should not display top menu items if profile service call fails" time="0" classname="HeaderComponent"/>
  <testcase name="TestingModule should create an instance" time="0.001" classname="TestingModule"/>
  <system-out>
    <![CDATA[Chrome 88.0.4298.0 (Windows 10) ERROR: 'Unhandled Promise rejection:', 'Cannot read property 'trim' of null', '; Zone:', 'ProxyZone', '; Task:', 'Promise.then', '; Value:', TypeError: Cannot read property 'trim' of null
TypeError: Cannot read property 'trim' of null
    at CreateHearingComponent.setHearingFormData (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.ts:174:50)
    at CreateHearingComponent.<anonymous> (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.ts:112:18)
    at Generator.next (<anonymous>)
    at http://localhost:9876/_karma_webpack_/main.js:21477:127
    at new ZoneAwarePromise (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-evergreen.js:960:1)
    at Bq7T.__awaiter (http://localhost:9876/_karma_webpack_/main.js:21441:10)
    at CreateHearingComponent.displayConfirmationDialog (http://localhost:9876/_karma_webpack_/main.js:21611:12)
    at UserContext.<anonymous> (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.spec.ts:52:19)
    at ZoneDelegate.invoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-evergreen.js:364:1)
    at ProxyZoneSpec.push.QpwO.ProxyZoneSpec.onInvoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-testing.js:292:1), 'TypeError: Cannot read property 'trim' of null
    at CreateHearingComponent.setHearingFormData (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.ts:174:50)
    at CreateHearingComponent.<anonymous> (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.ts:112:18)
    at Generator.next (<anonymous>)
    at http://localhost:9876/_karma_webpack_/main.js:21477:127
    at new ZoneAwarePromise (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-evergreen.js:960:1)
    at Bq7T.__awaiter (http://localhost:9876/_karma_webpack_/main.js:21441:10)
    at CreateHearingComponent.displayConfirmationDialog (http://localhost:9876/_karma_webpack_/main.js:21611:12)
    at UserContext.<anonymous> (http://localhost:9876/_karma_webpack_/webpack:/src/app/hearings/create-hearing/create-hearing.component.spec.ts:52:19)
    at ZoneDelegate.invoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-evergreen.js:364:1)
    at ProxyZoneSpec.push.QpwO.ProxyZoneSpec.onInvoke (http://localhost:9876/_karma_webpack_/webpack:/node_modules/zone.js/dist/zone-testing.js:292:1)'
,Chrome 88.0.4298.0 (Windows 10) WARN: 'Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?'
,Chrome 88.0.4298.0 (Windows 10) WARN: 'Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?'
,Chrome 88.0.4298.0 (Windows 10) LOG: 'Checking Profile for header...'
,Chrome 88.0.4298.0 (Windows 10) LOG: 'Checking Profile for header...'
,Chrome 88.0.4298.0 (Windows 10) LOG: 'Checking Profile for header...'
,Chrome 88.0.4298.0 (Windows 10) LOG: 'Checking Profile for header...'
,Chrome 88.0.4298.0 (Windows 10) LOG: 'Checking Profile for header...'

]]>
  </system-out>
  <system-err/>
</testsuite>