parameters:
    - name: PackageApp
      displayName: Package App
      type: boolean
      default: true

    - name: PackageACTests
      displayName: Package Acceptance Tests
      type: boolean
      default: true

    - name: RunUnitTests
      displayName: Run Unit Tests
      type: boolean
      default: true

    - name: RunIntegTests
      displayName: Run Integration Tests
      type: boolean
      default: false

    - name: RunSonarCloudTests
      displayName: Run Sonar Cloud Analysis
      type: boolean
      default: true

    - name: RunMutationTests
      displayName: Run Mutation Tests
      type: boolean
      default: false

    - name: RunACTests
      displayName: Run Acceptance Tests
      type: boolean
      default: true

    - name: RunNodeTests
      displayName: Run Node Tests
      type: boolean
      default: true

    - name: testSettings
      type: object
      default:
          # Services
          - name: Services:TestApiUrl
            value: $(test_api_url)
          - name: Services:TestApiResourceId
            value: vh-test-api-identifieruris
            secret: true

          # AzureAd
          - name: AzureAd:TenantId
            value: tenantid
            secret: true
          - name: AzureAd:ClientId
            value: vh-test-web-appid
            secret: true
          - name: AzureAd:ClientSecret
            value: vh-test-web-key
            secret: true
          - name: AzureAd:PostLogoutRedirectUri
            slot: true
          - name: AzureAd:RedirectUri
            slot: true

          # Testing
          - name: Testing:TestUsernameStem
            value: $(Testing:TestUsernameStem)
          - name: Testing:TestUserPassword
            value: $(Testing:TestUserPassword)

          # Kinly
          - name: KinlyConfiguration:CallbackSecret
            value: $(CallbackKey)
          - name: KinlyConfiguration:ApiSecret
            value: $(KinlyApiKey)

          # SauceLabs
          - name: Saucelabs:Username
            value: $(Saucelabs:Username)
          - name: Saucelabs:AccessKey
            value: $(Saucelabs:AccessKey)
          - name: Saucelabs:RealDeviceApiKey
            value: $(RealDeviceApiKey)

    - name: appSettings
      type: object
      default:
          - name: ApplicationInsights:InstrumentationKey
            value: vh-core-infra-AppInsightsKey
            secret: true

          # AzureAd
          - name: AzureAd:ClientId
            value: vh-test-web-appid
            secret: true
          - name: AzureAd:ClientSecret
            value: vh-test-web-key
            secret: true
          - name: AzureAd:PostLogoutRedirectUri
            slot:
              deployment:
                value: $(test_web_url)logout
              active:
                value: $(test_web_url)logout
          - name: AzureAd:RedirectUri
            slot:
              deployment:
                value: $(test_web_url)home
              active:
                value: $(test_web_url)home            
          - name: AzureAd:TenantId
            value: tenantid
            secret: true

          # Testing
          - name: Testing:TestUsernameStem
            value: $(Testing:TestUsernameStem)
          - name: Testing:TestUserPassword
            value: $(Testing:TestUserPassword)

          # Kinly
          - name: KinlyConfiguration:CallbackSecret
            value: $(CallbackKey)
          - name: KinlyConfiguration:ApiSecret
            value: $(KinlyApiKey)

          # Services
          - name: Services:TestApiResourceId
            value: vh-test-api-identifieruris
            secret: true
          - name: Services:TestApiUrl
            value: $(test_api_url)
            
          # SauceLabs
          - name: Saucelabs:Username
            value: $(Saucelabs:Username)
          - name: Saucelabs:AccessKey
            value: $(Saucelabs:AccessKey)
          - name: Saucelabs:RealDeviceApiKey
            value: $(RealDeviceApiKey)

variables:
    - group: vh-domains-and-urls
    - group: vh-apps-settings-generic
    - group: vh-test-web
    - group: vh-preview
    - group: Saucelabs
    - group: KinlyConfiguration_Test

trigger:
    branches:
        include:
            - master
            - release/*
            - hotfix/*

pr:
    branches:
        include:
            - master

resources:
    repositories:
        - repository: templates
          type: github
          name: hmcts/azure-devops-templates
          ref: refs/heads/master
          endpoint: hmcts_shaed
    containers:
        - container: dotnetsdk
          image: sspublicsbox.azurecr.io/vh/dotnet-angular:3.1.102
          endpoint: sspublicsbox
        - container: dotnetsdk-cipipeline
          image: sspublicsbox.azurecr.io/vh/dotnet-angular-cipipeline:3.1.102
          endpoint: sspublicsbox
        - container: node
          image: node:lts-alpine

extends:
    template: stages\dotnet-package.yml@templates
    parameters:
        coreProjectPath: TestWeb/TestWeb
        nodeProjectPath: TestWeb/TestWeb/ClientApp
        PackageApp: ${{ parameters.PackageApp }}
        PackageAcceptanceTests: ${{ parameters.PackageACTests }}
        packageManagers:
            - nuget
            - npm
        Test: ${{ or(parameters.RunUnitTests, parameters.RunIntegTests, parameters.RunMutationTests) }}
        testParameters:
            coreProjectPath: TestWeb/TestWeb
            nodeProjectPath: TestWeb/TestWeb/ClientApp
            RunNode: true
            unitTestProjectPath: TestWeb/TestWeb.UnitTests
            integTestProjectPath: TestWeb/TestWeb.IntegrationTests
            secrets_KeyVault: $(pr_Secret_KeyVault)
            secrets_Subscription: $(pr_Secret_Subscription)
            RunUnitTests: ${{ parameters.RunUnitTests }}
            RunIntegrationTests: ${{ parameters.RunIntegTests }}
            RunSonarCloud: ${{ parameters.RunSonarCloudTests }}
            RunStryker: ${{ parameters.RunMutationTests }}
            IntegrationTestSettings:
                - ${{ each setting in parameters.testSettings }}:
                      - name: ${{ setting.name }}
                        value: ${{ setting.value }}
                        secret: ${{ setting.secret }}
            coverletCoverageExclusions:
                - '[TestWeb]TestWeb.ConfigureServicesExtensions'
                - '[TestWeb]TestWeb.Program'
                - '[TestWeb]TestWeb.Startup'
                - '[*]TestWeb.Common.*'
                - '[*]TestWeb.Extensions.*'
                - '[*]TestWeb.Pages.*'
                - '[*]TestWeb.Swagger.*'
                - '[*]TestWeb.Views.*'
                - '[*]TestWeb.UnitTests.*'
                - '[*]TestWeb.Services.*'
                - '[*]Testing.Common.*'
            sonarCloud_ExtraProperties: |
                sonar.exclusions=**/node_modules/**,**/*.spec.ts, *.spec.ts, **/ClientApp/src/*, **/ClientApp/coverage/**/**, **/ConfigureServicesExtensions.cs, **/Startup.cs, **/Program.cs, **/TestWeb.Tests.Common/**, **/TestWeb.UnitTests/**, **/TestWeb.IntegrationTests/**, **/TestWeb.AcceptanceTests/**, **/TestWeb.Common/**, **/TestWeb/Pages/**, **/TestWeb/Swagger/**, **/TestWeb/Program/**, **/TestWeb/Extensions/**, **/ClientApp/src/scripts/*.js
                sonar.typescript.exclusions=**/node_modules/**,**/typings.d.ts,**/main.ts,**/environments/environment*.ts,**/*routing.module.ts,**/api-client.ts
                sonar.coverage.exclusions= **/TestWeb.Tests.Common/**, TestWeb/Views/*, TestWeb/Pages/*, TestWeb/Program/*, TestWeb/Swagger/*, TestWeb.UnitTests/*, TestWeb.IntegrationTests/*, TestWeb.AcceptanceTests/*, **/TestWeb.Services/**, **/ClientApp/src/scripts/*.js, **/ClientApp/src/app/testing/**
                sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/Coverage/coverage.opencover.xml
                sonar.typescript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/TestWeb/TestWeb/ClientApp/coverage/lcov.info
            StrykerBreak: 75
        ACTest: ${{ parameters.RunACTests }}
        releaseParameters:
            environment: Preview
            subscription: $(pr_Subscription)
            secrets_KeyVault: $(pr_Secret_KeyVault)
            secrets_Subscription: $(pr_Secret_Subscription)
            devOpsResource: vh_test_web
            deploymentSlot: production
            appName: vh-test-web-$(environment)
            resourceGroup: vh-test-web-$(environment)
            appSettings: ${{ parameters.appSettings }}
            testCaseFilter: TestCategory=smoketest
            dependentApps:             
                - name: vh-test-api-$(environment)
                  resourceGroup: vh-test-api-$(environment)
                  healthEndpoint: $(test_api_url)health/health
            acceptanceTestSettings:
                - name: Services:TestWebUrl
                  value: $(test_web_url)
                - ${{ each setting in parameters.testSettings }}:
                      - name: ${{ setting.name }}
                        value: ${{ setting.value }}
                        secret: ${{ setting.secret }}
